name: Deploy to development
on:
  push:
    branches:
      - main

permissions:
      id-token: write
      contents: read

jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v6
    - name: Get Head Ref branch name (i.e The current pull request branch)
      run: |
        echo "${{ steps.branch-name.outputs.head_ref_branch }}"
    - name: Get Base Ref branch name (i.e The target of a pull request.)
      run: |
        echo "${{ steps.branch-name.outputs.base_ref_branch }}"  

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2 # More information on this action can be found below in the 'AWS Credentials' section
      with:
        role-to-assume: arn:aws:iam::003718499156:role/GitHubAction-AssumeRoleWithAction
        aws-region: us-east-1

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: private
    

    - name: Build, tag, and push production image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: sb-ce-youtube
        IMAGE_TAG: ${{ github.sha }}
      if: steps.branch-name.outputs.current_branch == 'main'
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:prod .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:prod
    - name: Build, tag, and push staging image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: sb-ce-youtube
        IMAGE_TAG: ${{ github.sha }}
      if: steps.branch-name.outputs.current_branch == 'staging'
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:stage .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:stage
    - name: Build, tag, and push development image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: sb-ce-youtube
        IMAGE_TAG: ${{ github.sha }}
      if: steps.branch-name.outputs.current_branch == 'development'
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:dev .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:dev
    - name: Update kube config
      run: aws eks update-kubeconfig --name sb-StaggingDev-cluster --region us-east-1

    - name: Deploy development image to Amazon EKS
      if: steps.branch-name.outputs.current_branch == 'development'
      run: |
        kubectl delete -f sb-ce-youtube-deployment-service-dev.yaml --namespace ingress-nginx
        kubectl apply -f sb-ce-youtube-deployment-service-dev.yaml --namespace ingress-nginx
    - name: Deploy staging image to Amazon EKS
      if: steps.branch-name.outputs.current_branch == 'staging'
      run: |
        kubectl delete -f sb-ce-youtube-deployment-service-stage.yaml --namespace ingress-nginx
        kubectl apply -f sb-ce-youtube-deployment-service-stage.yaml --namespace ingress-nginx
    - name: Deploy production image to Amazon EKS
      if: steps.branch-name.outputs.current_branch == 'main'
      run: |
        kubectl delete -f sb-ce-youtube-deployment-service-prod.yaml --namespace ingress-nginx
        kubectl apply -f sb-ce-youtube-deployment-service-prod.yaml --namespace ingress-nginx

